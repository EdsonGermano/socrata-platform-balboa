# Default configuration. This will be incorporated into the jar and is loaded
# off the classpath as first thing when balboa-agent starts.

# Current configuration for the Metric Consumer.
balboa {
  agent {
    data.dir: /tmp
    data.dir: ${?BALBOA_AGENT_DATA_DIR}
    sleeptime: 10000
    sleeptime: ${?BALBOA_AGENT_SLEEP_TIME}
    initialdelay.ms: 0
    initialdelay.ms: ${?BALBOA_AGENT_INITIAL_DELAY_MS}

    # Determines what type of transport mechanism is used for sending the metrics
    # to the remote metrics store. Valid values are MQ (send over ActiveMQ) or HTTP
    # (send directly to the balboa-http server.) The details for the correct
    # destination server must be filled out below.
    transport.type: MQ
    transport.type: ${?BALBOA_AGENT_TRANSPORT_TYPE}

    # Properties for the metric destination when transport.type = HTTP
    balboa.http {
      url: "http://balboa.app.aws-us-west-2-staging.socrata.net/"
      url: ${?BALBOA_AGENT_BALBOA_HTTP_URL}
      timeout.ms: 150
      timeout.ms: ${?BALBOA_AGENT_BALBOA_HTTP_TIMEOUT_MS}
      max.retry.wait.ms: 2000
      max.retry.wait.ms: ${?BALBOA_AGENT_BALBOA_HTTP_MAX_RETRY_WAIT_MS}
    }
  }

  # Properties for the metric destination when transport.type = MQ
  jms.activemq {
    closeTimeout: 15000
    closeTimeout: ${?BALBOA_JMS_AMQ_CLOSE_TIMEOUT}
    server: "failover:(tcp://127.0.0.1:61616)"
    server: ${?BALBOA_JMS_AMQ_SERVER}
    queue: Metrics2012
    queue: ${?BALBOA_JMS_AMQ_QUEUE}
    user: "username"
    user: ${?BALBOA_SERVICE_JMS_AMQ_USER}
    password: "password"
    password: ${?BALBOA_SERVICE_JMS_AMQ_PASSWORD}
    buffer.size: 1
    buffer.size: ${?BALBOA_SERVICE_JMS_AMQ_BUFFER_SIZE}
  }
}
